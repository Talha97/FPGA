----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 06.02.2022 13:32:35
-- Design Name: 
-- Module Name: tb_spiMaster - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


entity tb_spiMaster is
Generic
(
    CPOL              : std_logic := '1';
	CPHA              : std_logic := '1';
	transmitLength    : integer   := 8 ;
	SPI_Speed         : integer   := 5000000;
	SystemClock       : integer   := 100000000
	
);
end tb_spiMaster;

architecture Behavioral of tb_spiMaster is


    component spiMaster is
    Generic
    (
        CPOL              : std_logic := '1';
        CPHA              : std_logic := '1';
        transmitLength    : integer   := 8 ;
        SPI_Speed         : integer   := 5000000;
        SystemClock       : integer   := 100000000
        
    );
    
    port
    (
        clock            : in std_logic  ;
        transmit         : in std_logic_vector( transmitLength-1 downto 0 );
        Miso             : in std_logic;	
        enableTransmit   : in std_logic;
        enableReceive    : in std_logic;
        
        received         : out std_logic_vector( transmitLength-1 downto 0 );
        Mosi             : out std_logic;
        busyTransmit     : out std_logic;
        busyReceive      : out std_logic;
        SPIClk           : out std_logic      	
    
    
    );
    end component;
    
    signal    clock            :  std_logic :='0' ;
    signal    transmit         :  std_logic_vector( transmitLength-1 downto 0 ) :=(others =>'0');
    signal    Miso             :  std_logic  :='0';	
    signal    enableTransmit   :  std_logic  :='0';
    signal    enableReceive    :  std_logic  :='0';
        
    signal    received         :  std_logic_vector( transmitLength-1 downto 0 );
    signal    Mosi             :  std_logic;
    signal    busyTransmit     :  std_logic;
    signal    busyReceive      :  std_logic;
    signal    SPIClk           :  std_logic ;     	
   
    begin
    
    STIM1: spiMaster
    Generic map
    (
      
	  CPOL            =>CPOL  ,        
	  CPHA            =>CPHA   ,       
	  transmitLength  =>transmitLength,
	  SPI_Speed       =>SPI_Speed     ,
	  SystemClock     =>SystemClock   
	  
	  
	  
	  
    )
	Port map
	(
	
	
	
	
	
	
	
	);


end Behavioral;
